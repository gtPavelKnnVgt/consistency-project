spring:
  application:
    name: financial-claim-service
  datasource:
    url: jdbc:postgresql://localhost:32768/test
    username: test
    password: test
  jpa:
    hibernate:
      ddl-auto: create-drop
  kafka:
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  cloud:
    function:
      definition: >
        extFinancialClaimsInitiatedEvent;
        claimsCreatedEvent;
    stream:
      binders:
        kafka-demo:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder.brokers: localhost:9092
      bindings:
        extFinancialClaimsInitiatedEvent-in-0:
          destination: EXT_FINANCIAL-CLAIMS-INITIATED-CREATED_EVENT
        claimsInitiatedCreatedEvent-out-0:
          destination: CLAIMS_INITIATED-CREATED_EVENT
      default:
        binder: kafka-demo
        content-type: application/json
        group: financial-claims
      kafka:
        bindings:
          default:
            producer:
              sync: true
    consul:
      discovery:
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  h2:
    console:
      enabled: true
server:
  port: 8096
management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  metrics:
    tags:
      application: financial-claim-service
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
